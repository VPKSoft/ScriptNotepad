This file includes some great code snippets witch for dumped because they were found useless.

        /// <summary>
        /// Validates the name of the script (i.e. reserved words or existing scripts).
        /// </summary>
        /// <param name="scriptName">A name of the script of which validity to check.</param>
        /// <param name="saveAs">A flag indicating whether the script is saved "as" or just to override an existing script.</param>
        /// <returns>True if the given script name was valid; otherwise false.</returns>
        private bool ValidateScriptName(string scriptName, bool saveAs)
        {
            // no white space allowed..
            scriptName = scriptName.Trim();

            // an unnamed script is not allowed..
            if (scriptName == string.Empty)
            {
                return false;
            }

            bool result = true;

            result = !((scriptName == defaultNameScriptTemplateText || // a localized template name for text will not do..
                scriptName == defaultNameScriptTemplateLines || // a localized template name for lines will not do..
                scriptName == "Simple line ending change script" || // a non-localized database template for lines will not do..
                scriptName == "Simple replace script" ||
                scriptName == "Simple XML manipulation script")); // a non-localized database template for text will not do..

            // the result at this point is that the script name is valid,
            // however the saveAs flag is true so there must not be any scripts
            // in the database with the same name..
            if (result && saveAs) 
            {
                // get all scripts from the database..
                IEnumerable<CODE_SNIPPETS> snippets = Database.Database.GetCodeSnippets();

                // if there is already one snippet with a same name, don't allow a save as..
                result &= !(snippets.Count(f => f.SCRIPT_NAME.ToLowerInvariant() == scriptName.ToLowerInvariant()) > 0);
            }

            // return the result..
            return result;
        }
